
-------------------------------- DAY 1 - 23 DEC 2024 --------------------------------------------------------------
OS - OS400
Database - DB2
IBMi is a machine to replace mainframe at lower cost.
https://www.go4as400.com/
https://github.com/skill-at/AS-400-Training/wiki
IBM® Rational® Developer for i(RDi) provides an integrated development environment (IDE) to create, maintain and modernize applications on the IBM i platform.

=> Source Physical file (are used to organise source members)
1. Create a source member
2. Compile that member to create as400 object

If there is a file of rpgle, it will be kept in qrpgsrc or qrpglsrc, like that clp in qclsrc, sql in qsqlsrc, dds in qddssrc

CREATE commands starts in CRT
DELETE in dlt
Work in wrk
display in dsp
copy in cpy
Library in lib
source in src

- To create a library => crtlib
- To create a source physical file => crt src pf => crtsrcpf


Naming standards for source file => QDDSSRC (For DDS file), QRPGLSRC, QCLSRC (CL Src) - TO STORE STRUCTURES AND SYNTAX OF A FILE... ITS LIKE A REPOSITORY

qtemp - Temporary buffer library

---- CREATING DATABASE FILES ----
 TWO WAYS: 
 
 1) DDS WAY : 
	Two types of files : Physical files(Contains actual data) and Logical files(View on physical file  data Like Views/indexes in sql , can be built on one physical file or multiple physical files too)
	COMMANDS: 
		1. Prompt => WRKMBRPDM
		2. File : QDDSSRC
		Clicking F6, it will go to SEU
		MBR => ACCOUNTPF
		
		
		Requirement of Physical File
		(Key)ACCOUNTNO - NUMERIC MAX LENGTH: 10
			ACCOUNTNAME - CHAR 50
			ADDRESS - CHAR 100
			ACNTBAL - NUMERIC 10,2 (Account Balance can to be in decimal too)
			
		SYNTAX: 
			1. FILE LEVEL ENTRIES
				(Not a mandatory entry, contains only functions/Keywords)
			2. RECORD LEVEL ENTRIES
				(Contains type, name and functions)
				(Type R for recorld level entry)
				Click F4 Give type R and name as ACCOUNTR, max lengght 10 (just a sample function.)
			3. Field Level ENTRIES
				(Contains field names, data types, keywords )
				Click F4, Name as ACCNTNo, Length as 10, Position - 0
				Click F4, Name as ACNTName, length 50
				Again F4, same as previous for address and CITY
				Again F4, Name as BALAMNT, Length 10, Decimal positions - 2. (If error check for blank space in Length)
			4. Key LEVEL
				(To add the key)
				F4, Type as K, Name as ACCNTNo
			To save and continue - type 'save' in SEU => line
	--- Create an object by compiling the source member ---
		Go back to PDM, add Opt as 14 to compile
		Check 'WRKOBJ' to see the object files. 
				
	--- To Enter Data(Row) => Command 'UPDDTA ACCOUNTPF' (To change according to some account no. enter the number in acc no. field and click F5 in format.), New Entry => F10
	--- To view the entered data => 'RUNQRY *N ACCOUNTPF'
	DFU HELPS UPDDTA IN THE BACKEND
	
 2) SQL/DDL : 
	To start sql, use 'strsql' and press ENTER , SQL SESSION will appear and add your sql queries. If you don't know syntax, use F4 to prompt and make query. 
	Retrieve F9 can be used to get the used line again. Keep the cursor on the Query to be repeated and  click F9, that query will appear. 

--- For primary key, in DDS, it should be explicitly mentioned to get it unique, else it won't be just being key. 
	Go to PDM, use EDIT (OPT 2), before the file level, make a line and in functions add 'UNIQUE'. Then Compile. 
	
--- After compile, new object is created and so the data will be erased. To avoid that, just backup the data.

---- Sample Logical File ----
	Need of logical file : Take an example of where there is a table with empno and empcity. empno is Key. you want to get emp data according to city so now you want to make empcity as key to order it. If we just change key here, it will affter other programs. Instead make a logical view and make empcity as key and work on it.
	i.e 1) Order of retrieval of records
		2) Select or omit
		3) If need a lesser no. of limits, or want to get data from multiple physical files. 
--- CREATING LOGICAL FILE:(CITY as key)
	Go to PDM, click F6, Create a source adding LF type and all(ACCOUNTLF as name). Get into Edit => prompt type = R, Record Name = ACCOUNTR(Exactly same as physical filename), in functions add "PFILE(ACCOUNTPF)" (to know which is the physical file)
	Next line, add Type K, name 'CITY'. (No need of file level entry since we need all the fields)
	Compile it. then 'RUNQRY *N ACCOUNTLF'
	- If we update the logical file, it will update Physical file too. i.e. Logical file create an access path to physical file. 
	
	

-------------------------------- DAY 2 - 24 DEC 2024 --------------------------------------------------------------

- Create library `CRTLIB ashlib`
	Lib => ashlib
	To check if library is there `wrkobj ashlib`
- crtsrcpf file
-  wrkmbrpdm file(ashlib/qddssrc)
- Create member

Number need to be left justified, to do it use it click insert and then space.
to click F keys higher than 12, use shift + incremented value... i.e for f14, click shift + 2.... for f20 , shift + 8

Levels in logical file:
file level
record level - r
field level - needs pfile()
key level - k
select/omit level - s or o


Logical file will show error due to library being to default while compiling. To solve it, use `CHNCURLIB` command and make your library as the current library and then compile. 

TO debug error
wrksplf - To check all spool files created by interactive job.
Select assistance level or F21 , and change it to 2 intermediate
Give 5 in opt to display and then give B in control to get to bottom of the file as the error will be present at end of the file. 

Command to delete spool file - DLTSPLF * Select

DSPFFD - display file feild description
dspfd - display file description

To display all the files starting with emplf objects.. use "wrkobj emplf*"

command to display all the dependent files (especially logical file object) is dspdbr
dltobj to delete objects, object type will be *file

-------------------------------- DAY 3 - 26 DEC 2024 --------------------------------------------------------------
Operators 

COMP EQ/GT
CMP
VALUES
LIST

give this when using S/O type to compare and select the fields in the function field.
e.g. CMP(EQ 'HYD')

With dynamic select, it happens at run time. It happens after the system runs and identifies all. 

if need to have lowercase value, go to edit change source settings "Change session defaults" or F13. Then change uppercase input only to N.

for join, if need to take a common field into the output, use jref() and mention from which file need to show. like Jref(1) if need to refer from first file.

Data types in DDS

	A: character
	P : Packed Decimal ... default ( 2 digit occupy 1 byte ) 5 or 6 bytes 
	S: Zoned decimal (1 digit occupy 1 byte) 10 bytes
	L : Date
	t: time
	z: timestamp
	
Keywords / Functions:

File level : UNIQUE, Fifo, lifo, fcfo, DYNSLT, JDFVAL
Record level : PFILE, Jfile, TEXT
Field level : JRef (Join if), COLHDG(Column heading), values/cmp
Key Level : ABSVAL(Absolute value), ALIAS, DESCEND


------  SQL

Can be done using strsql, but we do with creating file in QSQLSRC for future alterations easy way.
Create src file QSQLSRC. 
create source member for sql type.
sql cannot be compiled using 14 opt here. To execute SQL, use command RUNSQL STM, give commitment control as none. 
NOT NULL WITH DEFAULT is added because when we insert data only to specific columns and others are left with nothing, sql will assign default value like 0 for int, space for text instead of NULL, which will cause problem with RPG programming.
You have to delete the table if you want to update the table. Because create table can only be done once. 


ASSIGNMENT : CREATE STUDENT TABLE AND MARKS TABLE, ENTER DATA.... ROLLNO, TOTAL MARKS, MARKS OBTAINED, PERCENTAGE... CREATE A VIEW.

create a view on transaction table showing acc no, acc name, total transaction amount based on the trantype

-------------------------------- DAY 4 - 27 DEC 2024 --------------------------------------------------------------

Adding record format in sql. 
while creating table add rcdfmt <name> at the end.
it is not technical req for sql, but can be used for rpg opcodes. tHIS IS equivalent to R type entry in DDS.

CLOB, GLOB, BLOB are datatypes used for bigger size. 

in case if we get null value in the query add, ifnull(fieldname, value in case of null) function. 

-------------------------RPG Programming--------------------------------------------------------------------
- Report Program Generator
Present version - RPGLE or RPG400 or RPG IV
Source type - RPGLE
Source physical type - QRPGLSRC


RPGLE Specifications
	H - Control Specifications : Controls the way the program is created and how it will behave. e.g. DATFMT(*MDY) can be compiled the way we want.
	F - file specification : All file declarations happens here.
	D - Definition Specifications: Variables are declared here, including procedures, data structures
	C - Calculation spec: All the operations will be coded here. Reading, writing records, etc all will be here. 
	P - Procedure spec for RPG ILE : To deal with procedures of diff langs
	O - Output spec

* IS USED TO COMMENT.

End of code:
RETURN OPCODE IS USED TO END THE PROGRAM
Indictor variables - switch on last record indicator at the end => EVAL *INLR = '1' . IN is standard for indicators. 
can use either of them

compile using 14 ... i.e crtbndrpg
execute - call <filename>

To convert a decimal to char use %char()
CHAR TO DEC ... %DEC(VAR:5:2)
%DATE(VAR NAME)

<> means not equals to

use %trim() remove remaining spaces from a variable

ALTERNATIVE TO IF ELSE => select when

syntax:

Select 
	When condt1
		execute
	when condt2
		execute
	OTHERS
		execute
	Endsl
	
	use this only when you want to satisfy only 1 condt
	
TO INPUT A NUMBER through CL: `CALL PGM(ASHLIB/CALC4) PARM(('+') (5 (*DEC 10 0)) (4 (*DEC 10 0)))`
OR 
`CALL PGM(ASHLIB/CALC3) PARM(('-') (X'00000000005F') (X'00000000004F'))`  make the length 10 and F indicates signed bits... total bits should be even including F... if not add a 0 there


DSPSYSVAL QDATE
DSPSYSVAL QTIME

-------------------------------- DAY 5 - 28th DEC 2024 --------------------------------------------------------------
Working with Files (File operations):
F spec is used here
Use F and prompt f4 and enter file name and enter file types as per need.
I - for input
O - for output like for printer
C - combine type, used for screens
U - to update.

for Database we majorly use I and U. 

Then enter file designation: F, it will act based on the procedures in the program
End Of File is not needed 
File addition : A - allows to add but not update. but blank space wont allow add too.
leave seq no.
File Format: give E to indicater externally
Record address type: K, it will be sequence of Key... if blank it will be in order of arrival Sequence in the program
Device: where will the file. All the DB file and data will be in the disk. For screen it will be in the workstation(WORKSTN). For printer files/reports it will be in the printer.
To read, or read in sequence, give operation code `read` and factor 2 as file name

Loops:
for : whenever dealing indexes like array
do while and do until : for file processing
do while(DOW) : give positive conditions
do until(DOU) : till negative conditions


SETLL : Set lower limit => to set pointer
if a match is found, it will point to that match, if not found then it will take the next available thing

SETGT : Set greater limit => it will always place to next greater thing

to read in reverse, use readp ( read previous )

*loval for setll
*hival for setgt


reade => read equal , it will read equal next record.
